{"version":3,"file":"static/js/961.ba6ba995.chunk.js","mappings":"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","sources":["../node_modules/invariant/browser.js","common/utils/StringUtils.ts","shared/building_blocks/CopyButton.tsx","experiment-tracking/hooks/useExperimentQuery.tsx","shared/web-shared/utils/coerceToEnum.ts","shared/web-shared/utils/unified-details/useResponsiveContainer.ts","shared/web-shared/utils/unified-details/index.tsx","experiment-tracking/utils/ExperimentKindUtils.ts"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","import { takeWhile, truncate } from 'lodash';\n// Import pako lazily to reduce bundle size\nconst lazyPako = () => import('pako');\n\nexport const truncateToFirstLineWithMaxLength = (str: string, maxLength: number): string => {\n  const truncated = truncate(str, {\n    length: maxLength,\n  });\n  return takeWhile(truncated, (char) => char !== '\\n').join('');\n};\n\nexport const capitalizeFirstChar = (str: unknown) => {\n  if (!str || typeof str !== 'string' || str.length < 1) {\n    return str;\n  }\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n};\n\nexport const middleTruncateStr = (str: string, maxLen: number) => {\n  if (str.length > maxLen) {\n    const firstPartLen = Math.floor((maxLen - 3) / 2);\n    const lastPartLen = maxLen - 3 - firstPartLen;\n    return str.substring(0, firstPartLen) + '...' + str.substring(str.length - lastPartLen, str.length);\n  } else {\n    return str;\n  }\n};\n\nconst capitalizeFirstLetter = (string: string) => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\nconst _keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n/* eslint-disable no-bitwise */\n/**\n * UTF-8 safe version of base64 encoder\n * Source: http://www.webtoolkit.info/javascript_base64.html\n *\n * @param {string} input - Text to encode\n */\nexport const btoaUtf8 = (input: string) => {\n  let output = '';\n  let i = 0;\n\n  const result = _utf8_encode(input);\n\n  while (i < result.length) {\n    const chr1 = result.charCodeAt(i++);\n    const chr2 = result.charCodeAt(i++);\n    const chr3 = result.charCodeAt(i++);\n\n    const enc1 = chr1 >> 2;\n    const enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n    let enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n    let enc4 = chr3 & 63;\n\n    if (isNaN(chr2)) {\n      enc4 = 64;\n      enc3 = enc4;\n    } else if (isNaN(chr3)) {\n      enc4 = 64;\n    }\n\n    output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n  }\n\n  return output;\n};\n\n/**\n * UTF-8 safe version of base64 decoder\n * Source: http://www.webtoolkit.info/javascript_base64.html\n *\n * @param {string} input - Text to decode\n */\nexport const atobUtf8 = (input: string) => {\n  let output = '';\n  let i = 0;\n\n  const result = input?.replace(/[^A-Za-z0-9+/=]/g, '') || '';\n\n  while (i < result.length) {\n    const enc1 = _keyStr.indexOf(result.charAt(i++));\n    const enc2 = _keyStr.indexOf(result.charAt(i++));\n    const enc3 = _keyStr.indexOf(result.charAt(i++));\n    const enc4 = _keyStr.indexOf(result.charAt(i++));\n\n    const chr1 = (enc1 << 2) | (enc2 >> 4);\n    const chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n    const chr3 = ((enc3 & 3) << 6) | enc4;\n\n    output += String.fromCharCode(chr1);\n\n    if (enc3 !== 64) {\n      output += String.fromCharCode(chr2);\n    }\n\n    if (enc4 !== 64) {\n      output += String.fromCharCode(chr3);\n    }\n  }\n\n  return _utf8_decode(output);\n};\n\n/**\n * (private method) does a UTF-8 encoding\n *\n * @private\n * @param {string} string - Text to encode\n */\nconst _utf8_encode = (string = '') => {\n  const result = string.replace(/\\r\\n/g, '\\n');\n  let utftext = '';\n\n  for (let n = 0; n < result.length; n++) {\n    const c = result.charCodeAt(n);\n\n    if (c < 128) {\n      utftext += String.fromCharCode(c);\n    } else if (c > 127 && c < 2048) {\n      utftext += String.fromCharCode((c >> 6) | 192) + String.fromCharCode((c & 63) | 128);\n    } else {\n      utftext +=\n        String.fromCharCode((c >> 12) | 224) +\n        String.fromCharCode(((c >> 6) & 63) | 128) +\n        String.fromCharCode((c & 63) | 128);\n    }\n  }\n\n  return utftext;\n};\n\n/**\n * (private method) does a UTF-8 decoding\n *\n * @private\n * @param {string} utftext - UTF-8 text to dencode\n */\nconst _utf8_decode = (utftext = '') => {\n  let string = '';\n  let i = 0;\n\n  while (i < utftext.length) {\n    const c = utftext.charCodeAt(i);\n\n    if (c < 128) {\n      string += String.fromCharCode(c);\n      i++;\n    } else if (c > 191 && c < 224) {\n      const c2 = utftext.charCodeAt(i + 1);\n      string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n      i += 2;\n    } else {\n      const c2 = utftext.charCodeAt(i + 1);\n      const c3 = utftext.charCodeAt(i + 2);\n      string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n      i += 3;\n    }\n  }\n  return string;\n};\n/* eslint-enable no-bitwise */\n\n/**\n * Returns a SHA256 hash of the input string\n */\nexport const getStringSHA256 = (input: string) => {\n  return crypto.subtle.digest('SHA-256', new TextEncoder().encode(input)).then((arrayBuffer) => {\n    return Array.prototype.map.call(new Uint8Array(arrayBuffer), (x) => ('00' + x.toString(16)).slice(-2)).join('');\n  });\n};\n\nconst COMPRESSED_TEXT_DEFLATE_PREFIX = 'deflate;';\n\nexport const textCompressDeflate = async (text: string) => {\n  const pako = await lazyPako();\n  const binaryData = pako.deflate(text);\n\n  // Buffer-based implementation\n  if (typeof Buffer !== 'undefined') {\n    const b64encoded = Buffer.from(binaryData).toString('base64');\n    return `${COMPRESSED_TEXT_DEFLATE_PREFIX}${b64encoded}`;\n  }\n\n  // btoa-based implementation\n  const binaryString = Array.from(binaryData, (byte) => String.fromCodePoint(byte)).join('');\n  return `${COMPRESSED_TEXT_DEFLATE_PREFIX}${btoa(binaryString)}`;\n};\n\nexport const textDecompressDeflate = async (compressedText: string) => {\n  const pako = await lazyPako();\n  if (!compressedText.startsWith(COMPRESSED_TEXT_DEFLATE_PREFIX)) {\n    throw new Error('Invalid compressed text, payload header invalid');\n  }\n  const compressedTextWithoutPrefix = compressedText.slice(COMPRESSED_TEXT_DEFLATE_PREFIX.length);\n\n  // Buffer-based implementation\n  if (typeof Buffer !== 'undefined') {\n    const binaryString = Buffer.from(compressedTextWithoutPrefix, 'base64');\n    return pako.inflate(\n      // This doesn't fail in Mlflow-Copybara-Tester-Pr. TODO: check why.\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore [FEINF-4084] No overload matches this call.\n      binaryString,\n      { to: 'string' },\n    );\n  }\n\n  // atob-based implementation\n  const binaryString = atob(compressedTextWithoutPrefix);\n  return pako.inflate(\n    Uint8Array.from(binaryString, (m) => m.codePointAt(0) ?? 0),\n    { to: 'string' },\n  );\n};\n\nexport const isTextCompressedDeflate = (text: string) => text.startsWith(COMPRESSED_TEXT_DEFLATE_PREFIX);\n","import React, { useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Button, type ButtonProps, LegacyTooltip } from '@databricks/design-system';\n\ninterface CopyButtonProps extends Partial<ButtonProps> {\n  copyText: string;\n  showLabel?: React.ReactNode;\n  componentId?: string;\n}\n\nexport const CopyButton = ({ copyText, showLabel = true, componentId, ...buttonProps }: CopyButtonProps) => {\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  const handleClick = () => {\n    navigator.clipboard.writeText(copyText);\n    setShowTooltip(true);\n    setTimeout(() => {\n      setShowTooltip(false);\n    }, 3000);\n  };\n\n  const handleMouseLeave = () => {\n    setShowTooltip(false);\n  };\n\n  return (\n    <LegacyTooltip\n      title={\n        <FormattedMessage defaultMessage=\"Copied\" description=\"Tooltip text shown when copy operation completes\" />\n      }\n      dangerouslySetAntdProps={{\n        visible: showTooltip,\n      }}\n    >\n      <Button\n        componentId={componentId ?? 'mlflow.shared.copy_button'}\n        type=\"primary\"\n        onClick={handleClick}\n        onMouseLeave={handleMouseLeave}\n        css={{ 'z-index': 1 }}\n        // Define children as a explicit prop so it can be easily overrideable\n        children={\n          showLabel ? <FormattedMessage defaultMessage=\"Copy\" description=\"Button text for copy button\" /> : undefined\n        }\n        {...buttonProps}\n      />\n    </LegacyTooltip>\n  );\n};\n","import type { QueryHookOptions } from '@mlflow/mlflow/src/common/utils/graphQLHooks';\nimport { gql } from '@mlflow/mlflow/src/common/utils/graphQLHooks';\nimport { useQuery } from '@mlflow/mlflow/src/common/utils/graphQLHooks';\nimport type { MlflowGetExperimentQuery, MlflowGetExperimentQueryVariables } from '../../graphql/__generated__/graphql';\nimport { isArray } from 'lodash';\nimport { NotFoundError } from '@databricks/web-shared/errors';\n\nconst GET_EXPERIMENT_QUERY = gql`\n  query MlflowGetExperimentQuery($input: MlflowGetExperimentInput!) @component(name: \"MLflow.ExperimentRunTracking\") {\n    mlflowGetExperiment(input: $input) {\n      apiError {\n        code\n        message\n      }\n      experiment {\n        artifactLocation\n        creationTime\n        experimentId\n        lastUpdateTime\n        lifecycleStage\n        name\n        tags {\n          key\n          value\n        }\n      }\n    }\n  }\n`;\n\nexport type UseGetExperimentQueryResultExperiment = NonNullable<\n  MlflowGetExperimentQuery['mlflowGetExperiment']\n>['experiment'];\n\n/* eslint-disable react-hooks/rules-of-hooks */\nexport const useGetExperimentQuery = ({\n  experimentId,\n  options = {},\n}: {\n  experimentId?: string;\n  options?: QueryHookOptions<MlflowGetExperimentQuery, MlflowGetExperimentQueryVariables>;\n}) => {\n  const {\n    data,\n    loading,\n    error: apolloError,\n    refetch,\n  } = useQuery<MlflowGetExperimentQuery, MlflowGetExperimentQueryVariables>(GET_EXPERIMENT_QUERY, {\n    variables: {\n      input: {\n        experimentId,\n      },\n    },\n    skip: !experimentId,\n    ...options,\n  });\n\n  // Extract the single experiment entity from the response\n  const experimentEntity: UseGetExperimentQueryResultExperiment | undefined = data?.mlflowGetExperiment?.experiment;\n\n  const getApiError = () => {\n    return data?.mlflowGetExperiment?.apiError;\n  };\n\n  return {\n    loading,\n    data: experimentEntity,\n    refetch,\n    apolloError: apolloError,\n    apiError: getApiError(),\n  } as const;\n};\n","export function coerceToEnum<T extends Record<string, string>, K extends keyof T, V extends T[K] | undefined>(\n  enumObj: T,\n  value: any,\n  fallback: V,\n): V | T[keyof T] {\n  if (value === undefined || value === null || typeof value !== 'string') {\n    return fallback;\n  }\n  for (const v in enumObj) {\n    if (enumObj[v] === value) return enumObj[v];\n  }\n  return fallback;\n}\n","import type { RefObject } from 'react';\nimport { useState, useEffect } from 'react';\n\ninterface SizeMap {\n  [key: string]: number;\n}\n\nfunction useResponsiveContainer(ref: RefObject<HTMLElement>, sizeMap: SizeMap): string | null {\n  const [matchedSize, setMatchedSize] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (ref.current && sizeMap) {\n      const handleResize = () => {\n        if (!ref.current) {\n          return;\n        }\n        const elementWidth = ref.current.offsetWidth;\n        const matchedKey = Object.keys(sizeMap)\n          .filter((key) => sizeMap[key] >= elementWidth)\n          .sort((a, b) => sizeMap[a] - sizeMap[b])[0];\n\n        setMatchedSize(matchedKey);\n      };\n\n      handleResize();\n\n      const resizeObserver = new ResizeObserver(handleResize);\n      resizeObserver.observe(ref.current);\n\n      return () => resizeObserver.disconnect();\n    }\n    return undefined;\n  }, [ref, sizeMap]);\n\n  return matchedSize;\n}\n\nexport default useResponsiveContainer;\n","import { GenericSkeleton, ParagraphSkeleton, Typography, useDesignSystemTheme } from '@databricks/design-system';\nimport type { ReactNode } from 'react';\nimport { useRef } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport useResponsiveContainer from './useResponsiveContainer';\n\nexport interface AsideSectionProps {\n  id: string;\n  title?: ReactNode;\n  content: ReactNode;\n  isTitleLoading?: boolean;\n}\n\nexport type MaybeAsideSection = AsideSectionProps | null;\nexport type AsideSections = Array<MaybeAsideSection>;\n\nconst SIDEBAR_WIDTHS = {\n  sm: 316,\n  lg: 480,\n} as const;\nconst VERTICAL_MARGIN_PX = 16;\nconst DEFAULT_MAX_WIDTH = 450;\n\nexport const OverviewLayout = ({\n  isLoading,\n  asideSections,\n  children,\n  isTabLayout = true,\n  sidebarSize = 'sm',\n  verticalStackOrder,\n}: {\n  isLoading?: boolean;\n  asideSections: AsideSections;\n  children: ReactNode;\n  isTabLayout?: boolean;\n  sidebarSize?: 'sm' | 'lg';\n  verticalStackOrder?: 'main-first' | 'aside-first';\n}) => {\n  const { theme } = useDesignSystemTheme();\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const stackVertically = useResponsiveContainer(containerRef, { small: theme.responsive.breakpoints.lg }) === 'small';\n\n  // Determine vertical stack order, i.e. should the main content be on top or bottom\n  const verticalDisplayPrimaryContentOnTop = verticalStackOrder === 'main-first';\n\n  const totalSidebarWidth = SIDEBAR_WIDTHS[sidebarSize];\n  const innerSidebarWidth = totalSidebarWidth - VERTICAL_MARGIN_PX;\n\n  const secondaryStackedStyles = stackVertically\n    ? verticalDisplayPrimaryContentOnTop\n      ? { width: '100%' }\n      : { borderBottom: `1px solid ${theme.colors.border}`, width: '100%' }\n    : verticalDisplayPrimaryContentOnTop\n    ? {\n        width: innerSidebarWidth,\n      }\n    : {\n        paddingBottom: theme.spacing.sm,\n        width: innerSidebarWidth,\n      };\n\n  return (\n    <div\n      data-testid=\"entity-overview-container\"\n      ref={containerRef}\n      css={{\n        display: 'flex',\n        flexDirection: stackVertically ? (verticalDisplayPrimaryContentOnTop ? 'column' : 'column-reverse') : 'row',\n        gap: theme.spacing.lg,\n      }}\n    >\n      <div\n        css={{\n          display: 'flex',\n          flexGrow: 1,\n          flexDirection: 'column',\n          gap: theme.spacing.md,\n          width: stackVertically ? '100%' : `calc(100% - ${totalSidebarWidth}px)`,\n        }}\n      >\n        {isLoading ? <GenericSkeleton /> : children}\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          ...(isTabLayout && { marginTop: -theme.spacing.md }), // remove the gap between tab list and sidebar content\n        }}\n      >\n        <div\n          css={{\n            display: 'flex',\n            flexDirection: 'column',\n            gap: theme.spacing.lg,\n            ...secondaryStackedStyles,\n          }}\n        >\n          {isLoading && <GenericSkeleton />}\n          {!isLoading && <SidebarWrapper secondarySections={asideSections} />}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst SidebarWrapper = ({ secondarySections }: { secondarySections: AsideSections }) => {\n  return (\n    <div>\n      {secondarySections\n        .filter((section) => section !== null)\n        .filter((section) => section?.content !== null)\n        .map(({ title, isTitleLoading, content, id }, index) => (\n          <AsideSection title={title} isTitleLoading={isTitleLoading} content={content} key={id} index={index} />\n        ))}\n    </div>\n  );\n};\n\nexport const AsideSectionTitle = ({ children }: { children: ReactNode }) => {\n  const { theme } = useDesignSystemTheme();\n  return (\n    <Typography.Title\n      level={4}\n      style={{\n        whiteSpace: 'nowrap',\n        marginRight: theme.spacing.lg,\n        marginTop: 0,\n      }}\n    >\n      {children}\n    </Typography.Title>\n  );\n};\n\nconst AsideSection = ({\n  title,\n  content,\n  index,\n  isTitleLoading = false,\n}: Omit<AsideSectionProps, 'id'> & {\n  index: number;\n}) => {\n  const { theme } = useDesignSystemTheme();\n\n  const titleComponent = isTitleLoading ? (\n    <ParagraphSkeleton\n      label={\n        <FormattedMessage\n          defaultMessage=\"Section title loading\"\n          description=\"Loading skeleton label for overview page section title in Catalog Explorer\"\n        />\n      }\n    />\n  ) : title ? (\n    <AsideSectionTitle>{title}</AsideSectionTitle>\n  ) : null;\n\n  const compactStyles = { padding: `${theme.spacing.md}px 0 ${theme.spacing.md}px 0` };\n\n  return (\n    <div\n      css={{\n        ...compactStyles,\n        ...(index === 0 ? {} : { borderTop: `1px solid ${theme.colors.border}` }),\n      }}\n    >\n      {titleComponent}\n      {content}\n    </div>\n  );\n};\n\nexport const KeyValueProperty = ({\n  keyValue,\n  value,\n  maxWidth,\n}: {\n  keyValue: string;\n  value: React.ReactNode;\n  maxWidth?: number | string;\n}) => {\n  const { theme } = useDesignSystemTheme();\n  return (\n    <div\n      data-testid={`key-value-${keyValue}`}\n      css={{\n        display: 'flex',\n        alignItems: 'center',\n        '&:has(+ div)': {\n          marginBottom: theme.spacing.xs,\n        },\n        maxWidth: maxWidth ?? DEFAULT_MAX_WIDTH,\n        wordBreak: 'break-word',\n        lineHeight: theme.typography.lineHeightLg,\n      }}\n    >\n      <div\n        css={{\n          color: theme.colors.textSecondary,\n          flex: 0.5,\n          alignSelf: 'start',\n        }}\n      >\n        {keyValue}\n      </div>\n      <div\n        css={{\n          flex: 1,\n          alignSelf: 'start',\n          overflow: 'hidden',\n        }}\n      >\n        {value}\n      </div>\n    </div>\n  );\n};\n\nexport const NoneCell = () => {\n  return (\n    <Typography.Text color=\"secondary\">\n      <FormattedMessage defaultMessage=\"None\" description=\"Cell value when there's no content\" />\n    </Typography.Text>\n  );\n};\n","import { ExperimentKind } from '../constants';\nimport type { MessageDescriptor } from 'react-intl';\nimport { defineMessage } from 'react-intl';\nimport type { KeyValueEntity } from '../../common/types';\n\nexport const EXPERIMENT_KIND_TAG_KEY = 'mlflow.experimentKind';\n\nexport const getExperimentKindFromTags = (\n  experimentTags?:\n    | ({ __typename: 'MlflowExperimentTag'; key: string | null; value: string | null }[] | null)\n    | KeyValueEntity[],\n): ExperimentKind | undefined =>\n  experimentTags?.find((tag) => tag.key === EXPERIMENT_KIND_TAG_KEY)?.value as ExperimentKind;\n\nexport const isEditableExperimentKind = (experimentKind: ExperimentKind): boolean =>\n  experimentKind === ExperimentKind.GENAI_DEVELOPMENT_INFERRED ||\n  experimentKind === ExperimentKind.CUSTOM_MODEL_DEVELOPMENT_INFERRED ||\n  experimentKind === ExperimentKind.NO_INFERRED_TYPE ||\n  experimentKind === ExperimentKind.GENAI_DEVELOPMENT ||\n  experimentKind === ExperimentKind.CUSTOM_MODEL_DEVELOPMENT ||\n  experimentKind === ExperimentKind.EMPTY;\n\nexport const normalizeInferredExperimentKind = (experimentKind: ExperimentKind): ExperimentKind => {\n  if (experimentKind === ExperimentKind.GENAI_DEVELOPMENT_INFERRED) {\n    return ExperimentKind.GENAI_DEVELOPMENT;\n  }\n  if (experimentKind === ExperimentKind.CUSTOM_MODEL_DEVELOPMENT_INFERRED) {\n    return ExperimentKind.CUSTOM_MODEL_DEVELOPMENT;\n  }\n  return experimentKind;\n};\n\nexport const ExperimentKindDropdownLabels: Record<ExperimentKind, MessageDescriptor> = {\n  [ExperimentKind.GENAI_DEVELOPMENT]: defineMessage({\n    defaultMessage: 'GenAI apps & agents',\n    description: 'Label for experiments focused on generative AI model development',\n  }),\n  [ExperimentKind.CUSTOM_MODEL_DEVELOPMENT]: defineMessage({\n    defaultMessage: 'Machine learning',\n    description: 'Label for custom experiments focused on machine learning',\n  }),\n  [ExperimentKind.GENAI_DEVELOPMENT_INFERRED]: defineMessage({\n    defaultMessage: 'GenAI apps & agents',\n    description: 'Label for experiments automatically identified as generative AI development',\n  }),\n  [ExperimentKind.CUSTOM_MODEL_DEVELOPMENT_INFERRED]: defineMessage({\n    defaultMessage: 'Machine learning',\n    description: 'Label for custom experiments automatically identified as being focused on machine learning',\n  }),\n  [ExperimentKind.NO_INFERRED_TYPE]: defineMessage({\n    defaultMessage: 'None',\n    description: 'Label for experiments with no automatically inferred experiment type',\n  }),\n  [ExperimentKind.FINETUNING]: defineMessage({\n    defaultMessage: 'Finetuning',\n    description: 'Label for experiments focused on model finetuning',\n  }),\n  [ExperimentKind.REGRESSION]: defineMessage({\n    defaultMessage: 'Regression',\n    description: 'Label for experiments focused on regression modeling',\n  }),\n  [ExperimentKind.CLASSIFICATION]: defineMessage({\n    defaultMessage: 'Classification',\n    description: 'Label for experiments focused on classification modeling',\n  }),\n  [ExperimentKind.FORECASTING]: defineMessage({\n    defaultMessage: 'Forecasting',\n    description: 'Label for experiments focused on time series forecasting',\n  }),\n  [ExperimentKind.AUTOML]: defineMessage({\n    defaultMessage: 'AutoML',\n    description: 'Label for generic AutoML experiments',\n  }),\n  [ExperimentKind.EMPTY]: defineMessage({\n    defaultMessage: 'None',\n    description: 'Label for experiments with no experiment kind',\n  }),\n};\n\nexport const ExperimentKindShortLabels: Record<ExperimentKind, MessageDescriptor> = {\n  [ExperimentKind.GENAI_DEVELOPMENT]: defineMessage({\n    defaultMessage: 'GenAI apps & agents',\n    description: 'A short label for custom experiments focused on generative AI app and agent development',\n  }),\n  [ExperimentKind.CUSTOM_MODEL_DEVELOPMENT]: defineMessage({\n    defaultMessage: 'Machine learning',\n    description: 'A short label for custom experiments focused on machine learning',\n  }),\n  [ExperimentKind.GENAI_DEVELOPMENT_INFERRED]: defineMessage({\n    defaultMessage: 'GenAI apps & agents',\n    description:\n      'A short label for custom experiments automatically identified as being focused on generative AI app and agent development',\n  }),\n  [ExperimentKind.CUSTOM_MODEL_DEVELOPMENT_INFERRED]: defineMessage({\n    defaultMessage: 'Machine learning',\n    description: 'A short label for custom experiments automatically identified as being focused on machine learning',\n  }),\n  [ExperimentKind.NO_INFERRED_TYPE]: defineMessage({\n    defaultMessage: 'None',\n    description: 'A short label for experiments with no automatically inferred experiment type',\n  }),\n  [ExperimentKind.FINETUNING]: defineMessage({\n    defaultMessage: 'finetuning',\n    description: 'A short label for experiments focused on model finetuning',\n  }),\n  [ExperimentKind.REGRESSION]: defineMessage({\n    defaultMessage: 'regression',\n    description: 'A short label for experiments focused on regression modeling',\n  }),\n  [ExperimentKind.CLASSIFICATION]: defineMessage({\n    defaultMessage: 'classification',\n    description: 'A short label for experiments focused on classification modeling',\n  }),\n  [ExperimentKind.FORECASTING]: defineMessage({\n    defaultMessage: 'forecasting',\n    description: 'A short label for experiments focused on time series forecasting',\n  }),\n  [ExperimentKind.AUTOML]: defineMessage({\n    defaultMessage: 'AutoML',\n    description: 'A short label for generic AutoML experiments',\n  }),\n  [ExperimentKind.EMPTY]: defineMessage({\n    defaultMessage: 'None',\n    description: 'A short label for experiments with no experiment kind',\n  }),\n};\n\n// Returns list of experiment kinds that are user-selectable in the dropdown\nexport const getSelectableExperimentKinds = () => [\n  ExperimentKind.GENAI_DEVELOPMENT,\n  ExperimentKind.CUSTOM_MODEL_DEVELOPMENT,\n];\n"],"names":["module","exports","condition","format","a","b","c","d","e","f","error","undefined","Error","args","argIndex","replace","name","framesToPop","lazyPako","truncateToFirstLineWithMaxLength","str","maxLength","truncated","truncate","length","takeWhile","char","join","middleTruncateStr","maxLen","firstPartLen","Math","floor","lastPartLen","substring","_keyStr","btoaUtf8","input","output","i","result","_utf8_encode","chr1","charCodeAt","chr2","chr3","enc1","enc2","enc3","enc4","isNaN","charAt","atobUtf8","indexOf","String","fromCharCode","_utf8_decode","string","utftext","n","c2","c3","getStringSHA256","crypto","subtle","digest","TextEncoder","encode","then","arrayBuffer","Array","prototype","map","call","Uint8Array","x","toString","slice","COMPRESSED_TEXT_DEFLATE_PREFIX","textCompressDeflate","async","binaryData","deflate","text","Buffer","b64encoded","from","binaryString","byte","fromCodePoint","btoa","textDecompressDeflate","pako","compressedText","startsWith","compressedTextWithoutPrefix","inflate","to","atob","m","_m$codePointAt","codePointAt","isTextCompressedDeflate","_ref","styles","CopyButton","copyText","showLabel","componentId","buttonProps","showTooltip","setShowTooltip","useState","_jsx","LegacyTooltip","title","FormattedMessage","id","defaultMessage","dangerouslySetAntdProps","visible","children","Button","type","onClick","handleClick","navigator","clipboard","writeText","setTimeout","onMouseLeave","handleMouseLeave","css","GET_EXPERIMENT_QUERY","gql","useGetExperimentQuery","experimentId","options","_data$mlflowGetExperi","data","loading","apolloError","refetch","useQuery","variables","skip","mlflowGetExperiment","experiment","apiError","getApiError","_data$mlflowGetExperi2","coerceToEnum","enumObj","value","fallback","v","ref","sizeMap","matchedSize","setMatchedSize","useEffect","current","handleResize","elementWidth","offsetWidth","matchedKey","Object","keys","filter","key","sort","resizeObserver","ResizeObserver","observe","disconnect","SIDEBAR_WIDTHS","sm","lg","OverviewLayout","isLoading","asideSections","isTabLayout","sidebarSize","verticalStackOrder","theme","useDesignSystemTheme","containerRef","useRef","stackVertically","useResponsiveContainer","small","responsive","breakpoints","verticalDisplayPrimaryContentOnTop","totalSidebarWidth","innerSidebarWidth","secondaryStackedStyles","width","borderBottom","colors","border","paddingBottom","spacing","_jsxs","_css","display","flexDirection","gap","flexGrow","md","GenericSkeleton","style","marginTop","SidebarWrapper","secondarySections","section","content","isTitleLoading","index","AsideSection","AsideSectionTitle","Typography","Title","level","whiteSpace","marginRight","titleComponent","ParagraphSkeleton","label","compactStyles","padding","borderTop","KeyValueProperty","keyValue","maxWidth","alignItems","marginBottom","xs","wordBreak","lineHeight","typography","lineHeightLg","color","textSecondary","flex","alignSelf","NoneCell","Text","EXPERIMENT_KIND_TAG_KEY","getExperimentKindFromTags","experimentTags","_experimentTags$find","find","tag","isEditableExperimentKind","experimentKind","ExperimentKind","GENAI_DEVELOPMENT_INFERRED","CUSTOM_MODEL_DEVELOPMENT_INFERRED","NO_INFERRED_TYPE","GENAI_DEVELOPMENT","CUSTOM_MODEL_DEVELOPMENT","EMPTY","normalizeInferredExperimentKind","ExperimentKindDropdownLabels","defineMessage","FINETUNING","REGRESSION","CLASSIFICATION","FORECASTING","AUTOML","ExperimentKindShortLabels","getSelectableExperimentKinds"],"sourceRoot":""}