{"version":3,"file":"static/js/2410.acd4ef3a.chunk.js","mappings":"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","sources":["shared/web-shared/snippet/theme/databricks-duotone-dark.ts","experiment-tracking/components/experiment-page/hooks/useRunsArtifacts.tsx","experiment-tracking/components/CompareRunArtifactView.tsx","experiment-tracking/components/experiment-page/utils/getCommonArtifacts.ts","experiment-tracking/components/CompareRunView.tsx","experiment-tracking/components/CompareRunPage.tsx","common/components/CollapsibleSection.tsx","experiment-tracking/components/CompareRunUtil.ts","shared/building_blocks/PreviewBadge.tsx","shared/web-shared/copy/useCopyController.tsx","common/components/PageContainer.tsx","shared/web-shared/snippet/theme/databricks-light.ts","shared/building_blocks/CopyButton.tsx","shared/building_blocks/PageHeader.tsx","common/hooks/useSafeDeferredValue.ts","../node_modules/use-clipboard-copy/dist/index.js"],"sourcesContent":["/**\n * Adapted from `duotone-dark`\n * Ref: https://github.com/react-syntax-highlighter/react-syntax-highlighter/blob/b2457268891948f7005ccf539a70c000f0695bde/src/styles/prism/duotone-dark.js\n */\n\nconst databricksDuotoneDarkTheme = {\n  'code[class*=\"language-\"]': {\n    fontFamily:\n      'Consolas, Menlo, Monaco, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", \"Courier New\", Courier, monospace',\n    fontSize: '14px',\n    lineHeight: '1.375',\n    direction: 'ltr',\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n    background: '#2a2734',\n    color: '#5DFAFC', // D\n  },\n  'pre[class*=\"language-\"]': {\n    fontFamily:\n      'Consolas, Menlo, Monaco, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", \"Courier New\", Courier, monospace',\n    fontSize: '14px',\n    lineHeight: '1.375',\n    direction: 'ltr',\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n    background: '#2a2734',\n    color: '#5DFAFC', // D\n    padding: '1em',\n    margin: '.5em 0',\n    overflow: 'auto',\n  },\n  'pre > code[class*=\"language-\"]': {\n    fontSize: '1em',\n  },\n  'pre[class*=\"language-\"]::-moz-selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'pre[class*=\"language-\"] ::-moz-selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'code[class*=\"language-\"]::-moz-selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'code[class*=\"language-\"] ::-moz-selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'pre[class*=\"language-\"]::selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'pre[class*=\"language-\"] ::selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'code[class*=\"language-\"]::selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'code[class*=\"language-\"] ::selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  ':not(pre) > code[class*=\"language-\"]': {\n    padding: '.1em',\n    borderRadius: '.3em',\n  },\n  comment: {\n    color: '#6c6783',\n  },\n  prolog: {\n    color: '#6c6783',\n  },\n  doctype: {\n    color: '#6c6783',\n  },\n  cdata: {\n    color: '#6c6783',\n  },\n  punctuation: {\n    color: '#6c6783',\n  },\n  namespace: {\n    Opacity: '.7',\n  },\n  tag: {\n    color: '#3AACE2', // D\n  },\n  operator: {\n    color: '#3AACE2', // D\n  },\n  number: {\n    color: '#3AACE2', // D\n  },\n  property: {\n    color: '#5DFAFC', // D\n  },\n  function: {\n    color: '#5DFAFC', // D\n  },\n  'tag-id': {\n    color: '#eeebff',\n  },\n  selector: {\n    color: '#eeebff',\n  },\n  'atrule-id': {\n    color: '#eeebff',\n  },\n  'code.language-javascript': {\n    color: '#c4b9fe',\n  },\n  'attr-name': {\n    color: '#c4b9fe',\n  },\n  'code.language-css': {\n    color: '#ffffff', // D\n  },\n  'code.language-scss': {\n    color: '#ffffff', // D\n  },\n  boolean: {\n    color: '#ffffff', // D\n  },\n  string: {\n    color: '#ffffff', // D\n  },\n  entity: {\n    color: '#ffffff', // D\n    cursor: 'help',\n  },\n  url: {\n    color: '#ffffff', // D\n  },\n  '.language-css .token.string': {\n    color: '#ffffff', // D\n  },\n  '.language-scss .token.string': {\n    color: '#ffffff', // D\n  },\n  '.style .token.string': {\n    color: '#ffffff', // D\n  },\n  'attr-value': {\n    color: '#ffffff', // D\n  },\n  keyword: {\n    color: '#ffffff', // D\n  },\n  control: {\n    color: '#ffffff', // D\n  },\n  directive: {\n    color: '#ffffff', // D\n  },\n  unit: {\n    color: '#ffffff', // D\n  },\n  statement: {\n    color: '#ffffff', // D\n  },\n  regex: {\n    color: '#ffffff', // D\n  },\n  atrule: {\n    color: '#ffffff', // D\n  },\n  placeholder: {\n    color: '#ffffff', // D\n  },\n  variable: {\n    color: '#ffffff', // D\n  },\n  deleted: {\n    textDecoration: 'line-through',\n  },\n  inserted: {\n    borderBottom: '1px dotted #eeebff',\n    textDecoration: 'none',\n  },\n  italic: {\n    fontStyle: 'italic',\n  },\n  important: {\n    fontWeight: 'bold',\n    color: '#c4b9fe',\n  },\n  bold: {\n    fontWeight: 'bold',\n  },\n  'pre > code.highlight': {\n    Outline: '.4em solid #8a75f5',\n    OutlineOffset: '.4em',\n  },\n  '.line-numbers.line-numbers .line-numbers-rows': {\n    borderRightColor: '#2c2937',\n  },\n  '.line-numbers .line-numbers-rows > span:before': {\n    color: '#3c3949',\n  },\n  '.line-highlight.line-highlight': {\n    background: 'linear-gradient(to right, rgba(224, 145, 66, 0.2) 70%, rgba(224, 145, 66, 0))',\n  },\n};\n\nexport default databricksDuotoneDarkTheme;\n","import { useEffect, useState } from 'react';\nimport { listArtifactsApi } from '../../../actions';\nimport type { ArtifactListFilesResponse } from '../../../types';\n\n/**\n * Fetches artifacts given a list of run UUIDs\n * @param runUuids List of run UUIDs\n * @returns Object containing artifacts keyed by run UUID\n */\nexport const useRunsArtifacts = (runUuids: string[]) => {\n  const [artifactsKeyedByRun, setArtifactsKeyedByRun] = useState<Record<string, ArtifactListFilesResponse>>({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchArtifacts = async () => {\n      setIsLoading(true);\n      setError(null);\n\n      const artifactsByRun: Record<string, ArtifactListFilesResponse> = {};\n\n      try {\n        await Promise.all(\n          runUuids.map(async (runUuid) => {\n            const response = listArtifactsApi(runUuid);\n            const artifacts = (await response.payload) as ArtifactListFilesResponse;\n            artifactsByRun[runUuid] = artifacts;\n          }),\n        );\n        setArtifactsKeyedByRun(artifactsByRun);\n      } catch (err: any) {\n        setError(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (runUuids.length > 0) {\n      fetchArtifacts();\n    } else {\n      setArtifactsKeyedByRun({});\n      setIsLoading(false);\n    }\n  }, [runUuids]);\n\n  return { artifactsKeyedByRun, isLoading, error };\n};\n","import { useState } from 'react';\nimport ShowArtifactPage from './artifact-view-components/ShowArtifactPage';\nimport type { RunInfoEntity } from '../types';\nimport { useRunsArtifacts } from './experiment-page/hooks/useRunsArtifacts';\nimport { getCommonArtifacts } from './experiment-page/utils/getCommonArtifacts';\nimport { useDesignSystemTheme } from '@databricks/design-system';\nimport { FormattedMessage } from 'react-intl';\nimport { ArtifactViewTree } from './ArtifactViewTree';\nimport { getBasename } from '../../common/utils/FileUtils';\n\nexport const CompareRunArtifactView = ({\n  runUuids,\n  runInfos,\n  colWidth,\n}: {\n  runUuids: string[];\n  runInfos: RunInfoEntity[];\n  colWidth: number;\n}) => {\n  const { theme } = useDesignSystemTheme();\n  const [artifactPath, setArtifactPath] = useState<string | undefined>();\n\n  const { artifactsKeyedByRun } = useRunsArtifacts(runUuids);\n  const commonArtifacts = getCommonArtifacts(artifactsKeyedByRun);\n\n  if (commonArtifacts.length === 0) {\n    return (\n      <h2>\n        <FormattedMessage\n          defaultMessage=\"No common artifacts to display.\"\n          description=\"Text shown when there are no common artifacts between the runs\"\n        />\n      </h2>\n    );\n  }\n  return (\n    <div\n      css={{\n        display: 'flex',\n        flexDirection: 'row',\n        height: '100vh',\n      }}\n    >\n      <div\n        css={{\n          backgroundColor: theme.colors.backgroundPrimary,\n          color: theme.colors.textPrimary,\n          flex: '1 1 0%',\n          whiteSpace: 'nowrap',\n          border: `1px solid ${theme.colors.grey300}`,\n          overflowY: 'auto',\n        }}\n      >\n        <ArtifactViewTree\n          data={commonArtifacts.map((path: string) => ({\n            id: path,\n            active: artifactPath === path,\n            name: getBasename(path),\n          }))}\n          onToggleTreebeard={({ id }) => setArtifactPath(id)}\n        />\n      </div>\n      <div\n        css={{\n          border: `1px solid ${theme.colors.grey300}`,\n          borderLeft: 'none',\n          display: 'flex',\n          flexDirection: 'column',\n          overflow: 'hidden',\n        }}\n      >\n        <div css={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\n          {runUuids.map((runUuid, index) => (\n            <div\n              key={runUuid}\n              style={{\n                width: `${colWidth}px`,\n                borderBottom: `1px solid ${theme.colors.grey300}`,\n                padding: !artifactPath ? theme.spacing.md : 0,\n                overflow: 'auto',\n                whiteSpace: 'nowrap',\n              }}\n            >\n              <ShowArtifactPage\n                runUuid={runUuid}\n                artifactRootUri={runInfos[index].artifactUri}\n                path={artifactPath}\n                experimentId={runInfos[index].experimentId}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import type { ArtifactFileInfo, ArtifactListFilesResponse } from '../../../types';\n\n/**\n * Gets the list of artifacts that are present in all runs in the given list of runs.\n * @param artifactsKeyedByRun Object containing artifacts keyed by run UUID\n * @returns List of common artifacts\n */\nexport const getCommonArtifacts = (artifactsKeyedByRun: Record<string, ArtifactListFilesResponse>) => {\n  const runUuids = Object.keys(artifactsKeyedByRun);\n\n  if (runUuids.length === 0) return [];\n\n  let commonArtifacts = artifactsKeyedByRun[runUuids[0]]?.files\n    ?.map((file: ArtifactFileInfo) => (file.is_dir ? null : file.path))\n    ?.filter((path: string | null) => path !== null);\n\n  if (!commonArtifacts || commonArtifacts.length === 0) return [];\n\n  for (let i = 1; i < runUuids.length; i++) {\n    const currentRunArtifacts = artifactsKeyedByRun[runUuids[i]]?.files?.map((file: any) => file.path);\n    commonArtifacts = commonArtifacts?.filter((path: any) => currentRunArtifacts.includes(path));\n    if (commonArtifacts.length === 0) {\n      break;\n    }\n  }\n\n  return commonArtifacts;\n};\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage, type IntlShape } from 'react-intl';\nimport { Spacer, Switch, LegacyTabs, LegacyTooltip } from '@databricks/design-system';\n\nimport { getExperiment, getParams, getRunInfo, getRunTags } from '../reducers/Reducers';\nimport './CompareRunView.css';\nimport { CompareRunScatter } from './CompareRunScatter';\nimport { CompareRunBox } from './CompareRunBox';\nimport CompareRunContour from './CompareRunContour';\nimport Routes from '../routes';\nimport { Link } from '../../common/utils/RoutingUtils';\nimport { getLatestMetrics } from '../reducers/MetricReducer';\nimport CompareRunUtil from './CompareRunUtil';\nimport Utils from '../../common/utils/Utils';\nimport ParallelCoordinatesPlotPanel from './ParallelCoordinatesPlotPanel';\nimport { PageHeader } from '../../shared/building_blocks/PageHeader';\nimport { CollapsibleSection } from '../../common/components/CollapsibleSection';\nimport type { RunInfoEntity } from '../types';\nimport { CompareRunArtifactView } from './CompareRunArtifactView';\n\nconst { TabPane } = LegacyTabs;\n\ntype CompareRunViewProps = {\n  experiments: any[]; // TODO: PropTypes.instanceOf(Experiment)\n  experimentIds: string[];\n  comparedExperimentIds?: string[];\n  hasComparedExperimentsBefore?: boolean;\n  runInfos: RunInfoEntity[];\n  runUuids: string[];\n  metricLists: any[][];\n  paramLists: any[][];\n  tagLists: any[][];\n  runNames: string[];\n  runDisplayNames: string[];\n  intl: IntlShape;\n};\n\ntype CompareRunViewState = any;\nclass CompareRunView extends Component<CompareRunViewProps, CompareRunViewState> {\n  compareRunViewRef: any;\n  runDetailsTableRef: any;\n\n  constructor(props: CompareRunViewProps) {\n    super(props);\n    this.state = {\n      tableWidth: null,\n      onlyShowParamDiff: false,\n      onlyShowTagDiff: false,\n      onlyShowMetricDiff: false,\n    };\n    this.onResizeHandler = this.onResizeHandler.bind(this);\n    this.onCompareRunTableScrollHandler = this.onCompareRunTableScrollHandler.bind(this);\n\n    this.runDetailsTableRef = React.createRef();\n    this.compareRunViewRef = React.createRef();\n  }\n\n  onResizeHandler(e: any) {\n    const table = this.runDetailsTableRef.current;\n    if (table !== null) {\n      const containerWidth = table.clientWidth;\n      this.setState({ tableWidth: containerWidth });\n    }\n  }\n\n  onCompareRunTableScrollHandler(e: any) {\n    const blocks = this.compareRunViewRef.current.querySelectorAll('.mlflow-compare-run-table');\n    blocks.forEach((_: any, index: any) => {\n      const block = blocks[index];\n      if (block !== e.target) {\n        block.scrollLeft = e.target.scrollLeft;\n      }\n    });\n  }\n\n  componentDidMount() {\n    const pageTitle = this.props.intl.formatMessage(\n      {\n        description: 'Page title for the compare runs page',\n        defaultMessage: 'Comparing {runs} MLflow Runs',\n      },\n      {\n        runs: this.props.runInfos.length,\n      },\n    );\n    Utils.updatePageTitle(pageTitle);\n\n    window.addEventListener('resize', this.onResizeHandler, true);\n    window.dispatchEvent(new Event('resize'));\n  }\n\n  componentWillUnmount() {\n    // Avoid registering `onResizeHandler` every time this component mounts\n    window.removeEventListener('resize', this.onResizeHandler, true);\n  }\n\n  getTableColumnWidth() {\n    const minColWidth = 200;\n    let colWidth = minColWidth;\n\n    // @ts-expect-error TS(4111): Property 'tableWidth' comes from an index signatur... Remove this comment to see the full error message\n    if (this.state.tableWidth !== null) {\n      // @ts-expect-error TS(4111): Property 'tableWidth' comes from an index signatur... Remove this comment to see the full error message\n      colWidth = Math.round(this.state.tableWidth / (this.props.runInfos.length + 1));\n      if (colWidth < minColWidth) {\n        colWidth = minColWidth;\n      }\n    }\n    return colWidth;\n  }\n\n  renderExperimentNameRowItems() {\n    const { experiments } = this.props;\n    const experimentNameMap = Utils.getExperimentNameMap(Utils.sortExperimentsById(experiments));\n    return this.props.runInfos.map(({ experimentId, runUuid }) => {\n      // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      const { name, basename } = experimentNameMap[experimentId];\n      return (\n        <td className=\"meta-info\" key={runUuid}>\n          <Link to={Routes.getExperimentPageRoute(experimentId)} title={name}>\n            {basename}\n          </Link>\n        </td>\n      );\n    });\n  }\n\n  hasMultipleExperiments() {\n    return this.props.experimentIds.length > 1;\n  }\n\n  shouldShowExperimentNameRow() {\n    return this.props.hasComparedExperimentsBefore || this.hasMultipleExperiments();\n  }\n\n  getExperimentPageLink(experimentId: any, experimentName: any) {\n    return <Link to={Routes.getExperimentPageRoute(experimentId)}>{experimentName}</Link>;\n  }\n\n  getCompareExperimentsPageLinkText(numExperiments: any) {\n    return (\n      <FormattedMessage\n        defaultMessage=\"Displaying Runs from {numExperiments} Experiments\"\n        // eslint-disable-next-line max-len\n        description=\"Breadcrumb nav item to link to compare-experiments page on compare runs page\"\n        values={{ numExperiments }}\n      />\n    );\n  }\n\n  getCompareExperimentsPageLink(experimentIds: any) {\n    return (\n      <Link to={Routes.getCompareExperimentsPageRoute(experimentIds)}>\n        {this.getCompareExperimentsPageLinkText(experimentIds.length)}\n      </Link>\n    );\n  }\n\n  getExperimentLink() {\n    const { comparedExperimentIds, hasComparedExperimentsBefore, experimentIds, experiments } = this.props;\n\n    // Do not attempt to construct experiment links if they are not loaded\n    if (!experimentIds[0] || !experiments[0]) {\n      return '';\n    }\n\n    if (hasComparedExperimentsBefore) {\n      return this.getCompareExperimentsPageLink(comparedExperimentIds);\n    }\n\n    if (this.hasMultipleExperiments()) {\n      return this.getCompareExperimentsPageLink(experimentIds);\n    }\n\n    return this.getExperimentPageLink(experimentIds[0], experiments[0].name);\n  }\n\n  getTitle() {\n    return this.hasMultipleExperiments() ? (\n      <FormattedMessage\n        defaultMessage=\"Comparing {numRuns} Runs from {numExperiments} Experiments\"\n        // eslint-disable-next-line max-len\n        description=\"Breadcrumb title for compare runs page with multiple experiments\"\n        values={{\n          numRuns: this.props.runInfos.length,\n          numExperiments: this.props.experimentIds.length,\n        }}\n      />\n    ) : (\n      <FormattedMessage\n        defaultMessage=\"Comparing {numRuns} Runs from 1 Experiment\"\n        description=\"Breadcrumb title for compare runs page with single experiment\"\n        values={{\n          numRuns: this.props.runInfos.length,\n        }}\n      />\n    );\n  }\n\n  renderParamTable(colWidth: any) {\n    const dataRows = this.renderDataRows(\n      this.props.paramLists,\n      colWidth,\n      // @ts-expect-error TS(4111): Property 'onlyShowParamDiff' comes from an index s... Remove this comment to see the full error message\n      this.state.onlyShowParamDiff,\n      true,\n      (key: any, data: any) => key,\n      (value) => {\n        try {\n          const jsonValue = parsePythonDictString(value);\n\n          // Pretty print if parsed value is an object or array\n          if (typeof jsonValue === 'object' && jsonValue !== null) {\n            return this.renderPrettyJson(jsonValue);\n          } else {\n            return value;\n          }\n        } catch (e) {\n          return value;\n        }\n      },\n    );\n    if (dataRows.length === 0) {\n      return (\n        <h2>\n          <FormattedMessage\n            defaultMessage=\"No parameters to display.\"\n            description=\"Text shown when there are no parameters to display\"\n          />\n        </h2>\n      );\n    }\n    return (\n      <table\n        className=\"table mlflow-compare-table mlflow-compare-run-table\"\n        css={{ maxHeight: '500px' }}\n        onScroll={this.onCompareRunTableScrollHandler}\n      >\n        <tbody>{dataRows}</tbody>\n      </table>\n    );\n  }\n\n  renderPrettyJson(jsonValue: any) {\n    return <pre>{JSON.stringify(jsonValue, null, 2)}</pre>;\n  }\n\n  renderMetricTable(colWidth: any, experimentIds: any) {\n    const dataRows = this.renderDataRows(\n      this.props.metricLists,\n      colWidth,\n      // @ts-expect-error TS(4111): Property 'onlyShowMetricDiff' comes from an index ... Remove this comment to see the full error message\n      this.state.onlyShowMetricDiff,\n      false,\n      (key, data) => {\n        return (\n          <Link\n            to={Routes.getMetricPageRoute(\n              this.props.runInfos.map((info) => info.runUuid).filter((uuid, idx) => data[idx] !== undefined),\n              key,\n              experimentIds,\n            )}\n            title=\"Plot chart\"\n          >\n            {key}\n            <i className=\"fa fa-chart-line\" css={{ paddingLeft: '6px' }} />\n          </Link>\n        );\n      },\n      Utils.formatMetric,\n    );\n    if (dataRows.length === 0) {\n      return (\n        <h2>\n          <FormattedMessage\n            defaultMessage=\"No metrics to display.\"\n            description=\"Text shown when there are no metrics to display\"\n          />\n        </h2>\n      );\n    }\n    return (\n      <table\n        className=\"table mlflow-compare-table mlflow-compare-run-table\"\n        css={{ maxHeight: '300px' }}\n        onScroll={this.onCompareRunTableScrollHandler}\n      >\n        <tbody>{dataRows}</tbody>\n      </table>\n    );\n  }\n\n  renderArtifactTable(colWidth: any) {\n    return <CompareRunArtifactView runUuids={this.props.runUuids} runInfos={this.props.runInfos} colWidth={colWidth} />;\n  }\n\n  renderTagTable(colWidth: any) {\n    const dataRows = this.renderDataRows(\n      this.props.tagLists,\n      colWidth,\n      // @ts-expect-error TS(4111): Property 'onlyShowTagDiff' comes from an index sig... Remove this comment to see the full error message\n      this.state.onlyShowTagDiff,\n      true,\n    );\n    if (dataRows.length === 0) {\n      return (\n        <h2>\n          <FormattedMessage\n            defaultMessage=\"No tags to display.\"\n            description=\"Text shown when there are no tags to display\"\n          />\n        </h2>\n      );\n    }\n    return (\n      <table\n        className=\"table mlflow-compare-table mlflow-compare-run-table\"\n        css={{ maxHeight: '500px' }}\n        onScroll={this.onCompareRunTableScrollHandler}\n      >\n        <tbody>{dataRows}</tbody>\n      </table>\n    );\n  }\n\n  renderTimeRows(colWidthStyle: any) {\n    const unknown = (\n      <FormattedMessage\n        defaultMessage=\"(unknown)\"\n        description=\"Filler text when run's time information is unavailable\"\n      />\n    );\n    const getTimeAttributes = (runInfo: RunInfoEntity) => {\n      const startTime = runInfo.startTime;\n      const endTime = runInfo.endTime;\n      return {\n        runUuid: runInfo.runUuid,\n        startTime: startTime ? Utils.formatTimestamp(startTime, this.props.intl) : unknown,\n        endTime: endTime ? Utils.formatTimestamp(endTime, this.props.intl) : unknown,\n        duration: startTime && endTime ? Utils.getDuration(startTime, endTime) : unknown,\n      };\n    };\n    const timeAttributes = this.props.runInfos.map(getTimeAttributes);\n    const rows = [\n      {\n        key: 'startTime',\n        title: (\n          <FormattedMessage\n            defaultMessage=\"Start Time:\"\n            description=\"Row title for the start time of runs on the experiment compare runs page\"\n          />\n        ),\n        data: timeAttributes.map(({ runUuid, startTime }) => [runUuid, startTime]),\n      },\n      {\n        key: 'endTime',\n        title: (\n          <FormattedMessage\n            defaultMessage=\"End Time:\"\n            description=\"Row title for the end time of runs on the experiment compare runs page\"\n          />\n        ),\n        data: timeAttributes.map(({ runUuid, endTime }) => [runUuid, endTime]),\n      },\n      {\n        key: 'duration',\n        title: (\n          <FormattedMessage\n            defaultMessage=\"Duration:\"\n            description=\"Row title for the duration of runs on the experiment compare runs page\"\n          />\n        ),\n        data: timeAttributes.map(({ runUuid, duration }) => [runUuid, duration]),\n      },\n    ];\n    return rows.map(({ key, title, data }) => (\n      <tr key={key}>\n        <th scope=\"row\" className=\"head-value mlflow-sticky-header\" css={colWidthStyle}>\n          {title}\n        </th>\n        {data.map(([runUuid, value]) => (\n          <td className=\"data-value\" key={runUuid as string} css={colWidthStyle}>\n            <LegacyTooltip\n              title={value}\n              // @ts-expect-error TS(2322): Type '{ children: any; title: any; color: string; ... Remove this comment to see the full error message\n              color=\"gray\"\n              placement=\"topLeft\"\n              overlayStyle={{ maxWidth: '400px' }}\n              // mouseEnterDelay prop is not available in DuBois design system (yet)\n              dangerouslySetAntdProps={{ mouseEnterDelay: 1 }}\n            >\n              {value}\n            </LegacyTooltip>\n          </td>\n        ))}\n      </tr>\n    ));\n  }\n\n  render() {\n    const { experimentIds } = this.props;\n    const { runInfos, runNames, paramLists, metricLists, runUuids } = this.props;\n\n    const colWidth = this.getTableColumnWidth();\n    const colWidthStyle = this.genWidthStyle(colWidth);\n\n    const title = this.getTitle();\n    /* eslint-disable-next-line prefer-const */\n    let breadcrumbs = [this.getExperimentLink()];\n\n    const paramsLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Parameters',\n      description: 'Row group title for parameters of runs on the experiment compare runs page',\n    });\n\n    const metricsLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Metrics',\n      description: 'Row group title for metrics of runs on the experiment compare runs page',\n    });\n\n    const artifactsLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Artifacts',\n      description: 'Row group title for artifacts of runs on the experiment compare runs page',\n    });\n\n    const tagsLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Tags',\n      description: 'Row group title for tags of runs on the experiment compare runs page',\n    });\n    const diffOnlyLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Show diff only',\n      description:\n        // eslint-disable-next-line max-len\n        'Label next to the switch that controls displaying only differing values in comparision tables on the compare runs page',\n    });\n\n    return (\n      <div className=\"CompareRunView\" ref={this.compareRunViewRef}>\n        <PageHeader title={title} breadcrumbs={breadcrumbs} spacerSize=\"xs\" />\n        <CollapsibleSection\n          title={this.props.intl.formatMessage({\n            defaultMessage: 'Run details',\n            description: 'Compare table title on the compare runs page',\n          })}\n        >\n          <table\n            className=\"table mlflow-compare-table mlflow-compare-run-table\"\n            ref={this.runDetailsTableRef}\n            onScroll={this.onCompareRunTableScrollHandler}\n          >\n            <thead>\n              <tr>\n                <th scope=\"row\" className=\"head-value mlflow-sticky-header\" css={colWidthStyle}>\n                  <FormattedMessage\n                    defaultMessage=\"Run ID:\"\n                    description=\"Row title for the run id on the experiment compare runs page\"\n                  />\n                </th>\n                {this.props.runInfos.map((r) => (\n                  <th scope=\"row\" className=\"data-value\" key={r.runUuid} css={colWidthStyle}>\n                    <LegacyTooltip\n                      title={r.runUuid}\n                      // @ts-expect-error TS(2322): Type '{ children: Element; title: any; color: stri... Remove this comment to see the full error message\n                      color=\"gray\"\n                      placement=\"topLeft\"\n                      overlayStyle={{ maxWidth: '400px' }}\n                      mouseEnterDelay={1.0}\n                    >\n                      <Link to={Routes.getRunPageRoute(r.experimentId ?? '0', r.runUuid ?? '')}>{r.runUuid}</Link>\n                    </LegacyTooltip>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <th scope=\"row\" className=\"head-value mlflow-sticky-header\" css={colWidthStyle}>\n                  <FormattedMessage\n                    defaultMessage=\"Run Name:\"\n                    description=\"Row title for the run name on the experiment compare runs page\"\n                  />\n                </th>\n                {runNames.map((runName, i) => {\n                  return (\n                    <td className=\"data-value\" key={runInfos[i].runUuid} css={colWidthStyle}>\n                      <div className=\"truncate-text single-line\">\n                        <LegacyTooltip\n                          title={runName}\n                          // @ts-expect-error TS(2322): Type '{ children: string; title: string; color: st... Remove this comment to see the full error message\n                          color=\"gray\"\n                          placement=\"topLeft\"\n                          overlayStyle={{ maxWidth: '400px' }}\n                          mouseEnterDelay={1.0}\n                        >\n                          {runName}\n                        </LegacyTooltip>\n                      </div>\n                    </td>\n                  );\n                })}\n              </tr>\n              {this.renderTimeRows(colWidthStyle)}\n              {this.shouldShowExperimentNameRow() && (\n                <tr>\n                  <th scope=\"row\" className=\"data-value\">\n                    <FormattedMessage\n                      defaultMessage=\"Experiment Name:\"\n                      // eslint-disable-next-line max-len\n                      description=\"Row title for the experiment IDs of runs on the experiment compare runs page\"\n                    />\n                  </th>\n                  {this.renderExperimentNameRowItems()}\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </CollapsibleSection>\n        <CollapsibleSection title={paramsLabel}>\n          <Switch\n            componentId=\"codegen_mlflow_app_src_experiment-tracking_components_comparerunview.tsx_570\"\n            label={diffOnlyLabel}\n            aria-label={[paramsLabel, diffOnlyLabel].join(' - ')}\n            // @ts-expect-error TS(4111): Property 'onlyShowParamDiff' comes from an index s... Remove this comment to see the full error message\n            checked={this.state.onlyShowParamDiff}\n            onChange={(checked, e) => this.setState({ onlyShowParamDiff: checked })}\n          />\n          <Spacer size=\"lg\" />\n          {this.renderParamTable(colWidth)}\n        </CollapsibleSection>\n        <CollapsibleSection title={metricsLabel}>\n          <Switch\n            componentId=\"codegen_mlflow_app_src_experiment-tracking_components_comparerunview.tsx_581\"\n            label={diffOnlyLabel}\n            aria-label={[metricsLabel, diffOnlyLabel].join(' - ')}\n            // @ts-expect-error TS(4111): Property 'onlyShowMetricDiff' comes from an index ... Remove this comment to see the full error message\n            checked={this.state.onlyShowMetricDiff}\n            onChange={(checked, e) => this.setState({ onlyShowMetricDiff: checked })}\n          />\n          <Spacer size=\"lg\" />\n          {this.renderMetricTable(colWidth, experimentIds)}\n        </CollapsibleSection>\n        <CollapsibleSection title={artifactsLabel}>{this.renderArtifactTable(colWidth)}</CollapsibleSection>\n        <CollapsibleSection title={tagsLabel}>\n          <Switch\n            componentId=\"codegen_mlflow_app_src_experiment-tracking_components_comparerunview.tsx_592\"\n            label={diffOnlyLabel}\n            aria-label={[tagsLabel, diffOnlyLabel].join(' - ')}\n            // @ts-expect-error TS(4111): Property 'onlyShowTagDiff' comes from an index sig... Remove this comment to see the full error message\n            checked={this.state.onlyShowTagDiff}\n            onChange={(checked, e) => this.setState({ onlyShowTagDiff: checked })}\n          />\n          <Spacer size=\"lg\" />\n          {this.renderTagTable(colWidth)}\n        </CollapsibleSection>\n      </div>\n    );\n  }\n\n  genWidthStyle(width: any) {\n    return {\n      width: `${width}px`,\n      minWidth: `${width}px`,\n      maxWidth: `${width}px`,\n    };\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  renderDataRows(\n    list: any,\n    colWidth: any,\n    onlyShowDiff: any,\n    highlightDiff = false,\n    headerMap = (key: any, data: any) => key,\n    formatter = (value: any) => value,\n  ) {\n    // @ts-expect-error TS(2554): Expected 2 arguments, but got 1.\n    const keys = CompareRunUtil.getKeys(list);\n    const data = {};\n    const checkHasDiff = (values: any) => values.some((x: any) => x !== values[0]);\n    // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    keys.forEach((k) => (data[k] = { values: Array(list.length).fill(undefined) }));\n    list.forEach((records: any, i: any) => {\n      // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      records.forEach((r: any) => (data[r.key].values[i] = r.value));\n    });\n    // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    keys.forEach((k) => (data[k].hasDiff = checkHasDiff(data[k].values)));\n\n    const colWidthStyle = this.genWidthStyle(colWidth);\n\n    return (\n      keys\n        // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n        .filter((k) => !onlyShowDiff || data[k].hasDiff)\n        .map((k) => {\n          // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n          const { values, hasDiff } = data[k];\n          const rowClass = highlightDiff && hasDiff ? 'diff-row' : undefined;\n          return (\n            <tr key={k} className={rowClass}>\n              <th scope=\"row\" className=\"head-value mlflow-sticky-header\" css={colWidthStyle}>\n                {headerMap(k, values)}\n              </th>\n              {values.map((value: any, i: any) => {\n                const cellText = value === undefined ? '' : formatter(value);\n                return (\n                  <td className=\"data-value\" key={this.props.runInfos[i].runUuid} css={colWidthStyle}>\n                    <LegacyTooltip\n                      title={cellText}\n                      // @ts-expect-error TS(2322): Type '{ children: Element; title: any; color: stri... Remove this comment to see the full error message\n                      color=\"gray\"\n                      placement=\"topLeft\"\n                      overlayStyle={{ maxWidth: '400px' }}\n                      mouseEnterDelay={1.0}\n                    >\n                      <span className=\"truncate-text single-line\">{cellText}</span>\n                    </LegacyTooltip>\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n  const { comparedExperimentIds, hasComparedExperimentsBefore } = state.compareExperiments;\n  const runInfos: any = [];\n  const metricLists: any = [];\n  const paramLists: any = [];\n  const tagLists: any = [];\n  const runNames: any = [];\n  const runDisplayNames: any = [];\n  const { experimentIds, runUuids } = ownProps;\n  const experiments = experimentIds.map((experimentId: any) => getExperiment(experimentId, state));\n  runUuids.forEach((runUuid: any) => {\n    const runInfo = getRunInfo(runUuid, state);\n    // Skip processing data if run info is not available yet\n    if (!runInfo) {\n      return;\n    }\n    runInfos.push(runInfo);\n    metricLists.push(Object.values(getLatestMetrics(runUuid, state)));\n    paramLists.push(Object.values(getParams(runUuid, state)));\n    const runTags = getRunTags(runUuid, state);\n    const visibleTags = Utils.getVisibleTagValues(runTags).map(([key, value]) => ({\n      key,\n      value,\n    }));\n    tagLists.push(visibleTags);\n    runDisplayNames.push(Utils.getRunDisplayName(runInfo, runUuid));\n    runNames.push(Utils.getRunName(runInfo));\n  });\n  return {\n    experiments,\n    runInfos,\n    metricLists,\n    paramLists,\n    tagLists,\n    runNames,\n    runDisplayNames,\n    comparedExperimentIds,\n    hasComparedExperimentsBefore,\n  };\n};\n\n/**\n * Parse a Python dictionary in string format into a JSON object.\n * @param value The Python dictionary string to parse\n * @returns The parsed JSON object, or null if parsing fails\n */\nconst parsePythonDictString = (value: string) => {\n  try {\n    const jsonString = value.replace(/'/g, '\"');\n    return JSON.parse(jsonString);\n  } catch (e) {\n    return null;\n  }\n};\n\nexport default connect(mapStateToProps)(injectIntl(CompareRunView));\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport qs from 'qs';\nimport { connect } from 'react-redux';\nimport { getRunApi, getExperimentApi } from '../actions';\nimport RequestStateWrapper from '../../common/components/RequestStateWrapper';\nimport CompareRunView from './CompareRunView';\nimport { getUUID } from '../../common/utils/ActionUtils';\nimport { PageContainer } from '../../common/components/PageContainer';\nimport { withRouterNext } from '../../common/utils/withRouterNext';\nimport type { WithRouterNextProps } from '../../common/utils/withRouterNext';\nimport { withErrorBoundary } from '../../common/utils/withErrorBoundary';\nimport ErrorUtils from '../../common/utils/ErrorUtils';\nimport type { ErrorWrapper } from '../../common/utils/ErrorWrapper';\nimport { DangerIcon, Empty, Spinner } from '@databricks/design-system';\nimport { FormattedMessage } from 'react-intl';\nimport Utils from '../../common/utils/Utils';\nimport { FallbackProps } from 'react-error-boundary';\n\ntype CompareRunPageProps = {\n  experimentIds: string[];\n  runUuids: string[];\n  urlDecodeError?: boolean;\n  dispatch: (...args: any[]) => any;\n};\n\nclass CompareRunPageImpl extends Component<CompareRunPageProps> {\n  requestIds: any;\n\n  constructor(props: CompareRunPageProps) {\n    super(props);\n    this.requestIds = [];\n  }\n\n  state: {\n    requestError?: Error | ErrorWrapper;\n  } = {\n    requestError: undefined,\n  };\n\n  fetchExperiments() {\n    return this.props.experimentIds.map((experimentId) => {\n      const experimentRequestId = getUUID();\n      this.props\n        .dispatch(getExperimentApi(experimentId, experimentRequestId))\n        .catch((requestError: Error | ErrorWrapper) => this.setState({ requestError }));\n      return experimentRequestId;\n    });\n  }\n\n  componentDidMount() {\n    this.requestIds.push(...this.fetchExperiments());\n    this.props.runUuids.forEach((runUuid) => {\n      const requestId = getUUID();\n      this.requestIds.push(requestId);\n\n      this.props.dispatch(getRunApi(runUuid, requestId)).catch((requestError: Error | ErrorWrapper) => {\n        this.setState({ requestError });\n      });\n    });\n  }\n\n  render() {\n    // If the error is set, throw it to be caught by the error boundary\n    if (this.state.requestError) {\n      const { requestError } = this.state;\n      const errorToThrow = requestError instanceof Error ? requestError : new Error(requestError.getMessageField?.());\n      throw errorToThrow;\n    }\n    return (\n      <PageContainer>\n        <RequestStateWrapper\n          // We suppress throwing error by RequestStateWrapper since we handle it using component and error boundary\n          suppressErrorThrow\n          requestIds={this.requestIds}\n        >\n          <CompareRunView runUuids={this.props.runUuids} experimentIds={this.props.experimentIds} />\n        </RequestStateWrapper>\n      </PageContainer>\n    );\n  }\n}\n\n/**\n * When integrated via IFrame in Kubeflow it re-encodes the URI (sometimes multiple times), leading to an unparsable JSON.\n * This function decodes the URI until it is parsable.\n */\nconst decodeURI = (uri: string): string => {\n  const decodedURI = decodeURIComponent(uri);\n  if (uri !== decodedURI) {\n    return decodeURI(decodedURI);\n  }\n  return decodedURI;\n};\n\nconst mapStateToProps = (state: any, ownProps: WithRouterNextProps) => {\n  try {\n    const { location } = ownProps;\n    const locationSearchDecoded = decodeURI(location.search);\n    const searchValues = qs.parse(locationSearchDecoded);\n    // @ts-expect-error TS(2345): Argument of type 'string | string[] | ParsedQs | P... Remove this comment to see the full error message\n    const runUuids = JSON.parse(searchValues['?runs']);\n    // @ts-expect-error TS(2345): Argument of type 'string | string[] | ParsedQs | P... Remove this comment to see the full error message\n    const experimentIds = JSON.parse(searchValues['experiments']);\n    return { experimentIds, runUuids };\n  } catch (e) {\n    if (e instanceof SyntaxError) {\n      throw new SyntaxError(`Error while parsing URL: ${e.message}`);\n    }\n\n    throw e;\n  }\n};\n\nconst CompareRunPageErrorFallback = ({ error }: { error: Error }) => (\n  <div css={{ height: '100%', alignItems: 'center', justifyContent: 'center', display: 'flex' }}>\n    <Empty\n      title={\n        <FormattedMessage\n          defaultMessage=\"Error while loading compare runs page\"\n          description=\"Title of the error state on the run compare page\"\n        />\n      }\n      description={error.message}\n      image={<DangerIcon />}\n    />\n  </div>\n);\n\nconst CompareRunPage = withRouterNext(connect(mapStateToProps)(CompareRunPageImpl));\n\nexport default withErrorBoundary(\n  ErrorUtils.mlflowServices.RUN_TRACKING,\n  CompareRunPage,\n  undefined,\n  CompareRunPageErrorFallback,\n);\n","import React, { useCallback } from 'react';\nimport { SectionErrorBoundary } from './error-boundaries/SectionErrorBoundary';\nimport type { DesignSystemThemeInterface } from '@databricks/design-system';\nimport { ChevronRightIcon, useDesignSystemTheme, Accordion, importantify } from '@databricks/design-system';\nimport { useIntl } from 'react-intl';\n\ninterface CollapsibleSectionProps {\n  title: string | any;\n  forceOpen?: boolean;\n  children: React.ReactNode;\n  showServerError?: boolean;\n  defaultCollapsed?: boolean;\n  onChange?: (key: string | string[]) => void;\n  className?: string;\n  componentId?: string;\n}\n\n// Custom styles to make <Accordion> look like previously used <Collapse> from antd\nconst getAccordionStyles = ({\n  theme,\n  getPrefixedClassName,\n}: Pick<DesignSystemThemeInterface, 'theme' | 'getPrefixedClassName'>) => {\n  const clsPrefix = getPrefixedClassName('collapse');\n\n  const classItem = `.${clsPrefix}-item`;\n  const classHeader = `.${clsPrefix}-header`;\n  const classContentBox = `.${clsPrefix}-content-box`;\n\n  return {\n    fontSize: 14,\n    [`& > ${classItem} > ${classHeader}`]: {\n      paddingLeft: 0,\n      paddingTop: 12,\n      paddingBottom: 12,\n      display: 'flex',\n      alignItems: 'center',\n      fontSize: 16,\n      fontWeight: 'normal',\n      lineHeight: theme.typography.lineHeightLg,\n    },\n    [classContentBox]: {\n      padding: `${theme.spacing.xs}px 0 ${theme.spacing.md}px 0`,\n    },\n  };\n};\n\nexport function CollapsibleSection(props: CollapsibleSectionProps) {\n  const {\n    title,\n    forceOpen,\n    showServerError,\n    defaultCollapsed,\n    onChange,\n    className,\n    componentId = 'mlflow.common.generic_collapsible_section',\n  } = props;\n\n  // We need to spread `activeKey` into <Collapse/> as an optional prop because its enumerability\n  // affects rendering, i.e. passing `activeKey={undefined}` is different from not passing activeKey\n  const activeKeyProp = forceOpen && { activeKey: ['1'] };\n  const defaultActiveKey = defaultCollapsed ? null : ['1'];\n\n  const { theme, getPrefixedClassName } = useDesignSystemTheme();\n  const { formatMessage } = useIntl();\n\n  const getExpandIcon = useCallback(\n    ({ isActive }: { isActive?: boolean }) => (\n      <div\n        css={importantify({ width: theme.general.heightBase / 2, transform: isActive ? 'rotate(90deg)' : undefined })}\n      >\n        <ChevronRightIcon\n          css={{\n            svg: { width: theme.general.heightBase / 2, height: theme.general.heightBase / 2 },\n          }}\n          aria-label={\n            isActive\n              ? formatMessage(\n                  {\n                    defaultMessage: 'collapse {title}',\n                    description: 'Common component > collapsible section > alternative label when expand',\n                  },\n                  { title },\n                )\n              : formatMessage(\n                  {\n                    defaultMessage: 'expand {title}',\n                    description: 'Common component > collapsible section > alternative label when collapsed',\n                  },\n                  { title },\n                )\n          }\n        />\n      </div>\n    ),\n    [theme, title, formatMessage],\n  );\n\n  return (\n    <Accordion\n      componentId={componentId}\n      {...activeKeyProp}\n      dangerouslyAppendEmotionCSS={getAccordionStyles({ theme, getPrefixedClassName })}\n      dangerouslySetAntdProps={{\n        className,\n        expandIconPosition: 'left',\n        expandIcon: getExpandIcon,\n      }}\n      defaultActiveKey={defaultActiveKey ?? undefined}\n      onChange={onChange}\n    >\n      <Accordion.Panel header={title} key=\"1\">\n        <SectionErrorBoundary showServerError={showServerError}>{props.children}</SectionErrorBoundary>\n      </Accordion.Panel>\n    </Accordion>\n  );\n}\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class -- TODO(FEINF-4274)\nexport default class CompareRunUtil {\n  /**\n   * Find in a list of metrics/params a certain key\n   */\n  static findInList(data: any, key: any) {\n    let found = undefined;\n    data.forEach((value: any) => {\n      if (value.key === key) {\n        found = value;\n      }\n    });\n    return found;\n  }\n\n  /**\n   * Get all keys present in the data in ParamLists or MetricLists or Schema input and outputs lists\n   */\n  static getKeys(lists: any, numeric: any) {\n    const keys = {};\n    lists.forEach((list: any) =>\n      list.forEach((item: any) => {\n        if (!(item.key in keys)) {\n          // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n          keys[item.key] = true;\n        }\n        if (numeric && isNaN(parseFloat(item.value))) {\n          // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n          keys[item.key] = false;\n        }\n      }),\n    );\n    return (\n      Object.keys(keys)\n        // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n        .filter((k) => keys[k])\n        .sort()\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Tag, useDesignSystemTheme } from '@databricks/design-system';\nexport const PreviewBadge = ({ className }: { className?: string }) => {\n  const { theme } = useDesignSystemTheme();\n  return (\n    <Tag\n      componentId=\"codegen_mlflow_app_src_shared_building_blocks_previewbadge.tsx_14\"\n      className={className}\n      css={{ marginLeft: theme.spacing.xs }}\n      color=\"turquoise\"\n    >\n      <FormattedMessage\n        defaultMessage=\"Experimental\"\n        description=\"Experimental badge shown for features which are experimental\"\n      />\n    </Tag>\n  );\n};\n","import type { ReactElement } from 'react';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useClipboard } from 'use-clipboard-copy';\n\nimport { CheckIcon, CopyIcon } from '@databricks/design-system';\nimport { useIntl } from '@databricks/i18n';\n\nexport interface CopyController {\n  actionIcon: ReactElement;\n  tooltipMessage: string;\n  copy: () => void;\n  copied: boolean;\n  ariaLabel: string;\n  tooltipOpen: boolean;\n  handleTooltipOpenChange: (open: boolean) => void;\n}\n\n/**\n * Utility hook that is internal to web-shared, use: `Copyable` or `CopyActionButton`\n *  or if it's a `CodeSnippet`, `SnippetCopyAction`\n */\nexport function useCopyController(text: string, copyTooltip?: string, onCopy?: () => void): CopyController {\n  const intl = useIntl();\n\n  const copyMessage = copyTooltip\n    ? copyTooltip\n    : intl.formatMessage({\n        defaultMessage: 'Copy',\n        description: 'Tooltip message displayed on copy action',\n      });\n\n  const copiedMessage = intl.formatMessage({\n    defaultMessage: 'Copied',\n    description: 'Tooltip message displayed on copy action after it has been clicked',\n  });\n\n  const clipboard = useClipboard();\n  const copiedTimerIdRef = useRef<number>();\n  const [copied, setCopied] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    return () => {\n      window.clearTimeout(copiedTimerIdRef.current);\n    };\n  }, []);\n\n  const copy = () => {\n    clipboard.copy(text);\n    window.clearTimeout(copiedTimerIdRef.current);\n    setCopied(true);\n    onCopy?.();\n    copiedTimerIdRef.current = window.setTimeout(() => {\n      setCopied(false);\n    }, 3000);\n  };\n\n  return {\n    actionIcon: copied ? <CheckIcon /> : <CopyIcon />,\n    tooltipMessage: copied ? copiedMessage : copyMessage,\n    copy,\n    copied,\n    ariaLabel: copyMessage,\n    tooltipOpen: open || copied,\n    handleTooltipOpenChange: setOpen,\n  };\n}\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React from 'react';\nimport { PageWrapper, Spacer } from '@databricks/design-system';\n\ntype OwnProps = {\n  usesFullHeight?: boolean;\n  children?: React.ReactNode;\n};\n\n// @ts-expect-error TS(2565): Property 'defaultProps' is used before being assig... Remove this comment to see the full error message\ntype Props = OwnProps & typeof PageContainer.defaultProps;\n\nexport function PageContainer(props: Props) {\n  const { usesFullHeight, ...restProps } = props;\n  return (\n    // @ts-expect-error TS(2322): Type '{ height: string; display: string; flexDirec... Remove this comment to see the full error message\n    <PageWrapper css={usesFullHeight ? styles.useFullHeightLayout : styles.wrapper}>\n      {/* @ts-expect-error TS(2322): Type '{ css: { flexShrink: number; }; }' is not as... Remove this comment to see the full error message */}\n      <Spacer css={styles.fixedSpacer} />\n      {usesFullHeight ? props.children : <div {...restProps} css={styles.container} />}\n    </PageWrapper>\n  );\n}\n\nPageContainer.defaultProps = {\n  usesFullHeight: false,\n};\n\nconst styles = {\n  useFullHeightLayout: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    '&:last-child': {\n      flexGrow: 1,\n    },\n  },\n  wrapper: { flex: 1 },\n  fixedSpacer: {\n    // Ensure spacer's fixed height regardless of flex\n    flexShrink: 0,\n  },\n  container: {\n    width: '100%',\n    flexGrow: 1,\n    paddingBottom: 24,\n  },\n};\n","/**\n * Adapted from `material-light`\n * Ref: https://github.com/react-syntax-highlighter/react-syntax-highlighter/blob/b2457268891948f7005ccf539a70c000f0695bde/src/styles/prism/material-light.js#L1\n *\n * This theme overwrites colors to be similiar to the `@databricks/editor` theme.\n */\n\nconst databricksLightTheme = {\n  'code[class*=\"language-\"]': {\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    wordWrap: 'normal',\n    color: 'rgb(77, 77, 76)', // D\n    background: '#fafafa',\n    fontFamily: 'Monaco, Menlo, Ubuntu Mono, Consolas, source-code-pro, monospace',\n    fontSize: '12px', // D\n    lineHeight: '1.5em',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n  },\n  'pre[class*=\"language-\"]': {\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    wordWrap: 'normal',\n    color: 'rgb(77, 77, 76)', // D\n    background: '#fafafa',\n    fontFamily: 'Monaco, Menlo, Ubuntu Mono, Consolas, source-code-pro, monospace',\n    fontSize: '12px', // D\n    lineHeight: '1.5em',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n    overflow: 'auto',\n    position: 'relative',\n    margin: '0.5em 0',\n    padding: '1.25em 1em',\n  },\n  'code[class*=\"language-\"]::-moz-selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'pre[class*=\"language-\"]::-moz-selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'code[class*=\"language-\"] ::-moz-selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'pre[class*=\"language-\"] ::-moz-selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'code[class*=\"language-\"]::selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'pre[class*=\"language-\"]::selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'code[class*=\"language-\"] ::selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'pre[class*=\"language-\"] ::selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  ':not(pre) > code[class*=\"language-\"]': {\n    whiteSpace: 'normal',\n    borderRadius: '0.2em',\n    padding: '0.1em',\n  },\n  '.language-css > code': {\n    color: '#f5871f', // D\n  },\n  '.language-sass > code': {\n    color: '#f5871f', // D\n  },\n  '.language-scss > code': {\n    color: '#f5871f', // D\n  },\n  '[class*=\"language-\"] .namespace': {\n    Opacity: '0.7',\n  },\n  atrule: {\n    color: '#7c4dff',\n  },\n  'attr-name': {\n    color: '#39adb5',\n  },\n  'attr-value': {\n    color: '#f6a434',\n  },\n  attribute: {\n    color: '#f6a434',\n  },\n  boolean: {\n    color: '#7c4dff', // D\n  },\n  builtin: {\n    color: '#39adb5',\n  },\n  cdata: {\n    color: '#39adb5',\n  },\n  char: {\n    color: '#39adb5',\n  },\n  class: {\n    color: '#39adb5',\n  },\n  'class-name': {\n    color: '#6182b8',\n  },\n  comment: {\n    color: '#8e908c', // D\n  },\n  constant: {\n    color: '#7c4dff', // D\n  },\n  deleted: {\n    color: '#e53935',\n  },\n  doctype: {\n    color: '#aabfc9',\n  },\n  entity: {\n    color: '#e53935',\n  },\n  function: {\n    color: '#4271ae', // D\n  },\n  hexcode: {\n    color: '#f5871f', // D\n  },\n  id: {\n    color: '#7c4dff',\n    fontWeight: 'bold',\n  },\n  important: {\n    color: '#7c4dff',\n    fontWeight: 'bold',\n  },\n  inserted: {\n    color: '#39adb5',\n  },\n  keyword: {\n    color: '#8959a8', // D\n  },\n  number: {\n    color: '#f5871f', // D\n  },\n  operator: {\n    color: '#3e999f', // D\n  },\n  prolog: {\n    color: '#aabfc9',\n  },\n  property: {\n    color: '#39adb5',\n  },\n  'pseudo-class': {\n    color: '#f6a434',\n  },\n  'pseudo-element': {\n    color: '#f6a434',\n  },\n  punctuation: {\n    color: 'rgb(77, 77, 76)', // D\n  },\n  regex: {\n    color: '#6182b8',\n  },\n  selector: {\n    color: '#e53935',\n  },\n  string: {\n    color: '#3ba85f', // D\n  },\n  symbol: {\n    color: '#7c4dff',\n  },\n  tag: {\n    color: '#e53935',\n  },\n  unit: {\n    color: '#f5871f', // D\n  },\n  url: {\n    color: '#e53935',\n  },\n  variable: {\n    color: '#c72d4c', // D\n  },\n};\n\nexport default databricksLightTheme;\n","import React, { useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Button, type ButtonProps, LegacyTooltip } from '@databricks/design-system';\n\ninterface CopyButtonProps extends Partial<ButtonProps> {\n  copyText: string;\n  showLabel?: React.ReactNode;\n  componentId?: string;\n}\n\nexport const CopyButton = ({ copyText, showLabel = true, componentId, ...buttonProps }: CopyButtonProps) => {\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  const handleClick = () => {\n    navigator.clipboard.writeText(copyText);\n    setShowTooltip(true);\n    setTimeout(() => {\n      setShowTooltip(false);\n    }, 3000);\n  };\n\n  const handleMouseLeave = () => {\n    setShowTooltip(false);\n  };\n\n  return (\n    <LegacyTooltip\n      title={\n        <FormattedMessage defaultMessage=\"Copied\" description=\"Tooltip text shown when copy operation completes\" />\n      }\n      dangerouslySetAntdProps={{\n        visible: showTooltip,\n      }}\n    >\n      <Button\n        componentId={componentId ?? 'mlflow.shared.copy_button'}\n        type=\"primary\"\n        onClick={handleClick}\n        onMouseLeave={handleMouseLeave}\n        css={{ 'z-index': 1 }}\n        // Define children as a explicit prop so it can be easily overrideable\n        children={\n          showLabel ? <FormattedMessage defaultMessage=\"Copy\" description=\"Button text for copy button\" /> : undefined\n        }\n        {...buttonProps}\n      />\n    </LegacyTooltip>\n  );\n};\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React from 'react';\nimport {\n  Breadcrumb,\n  Button,\n  Spacer,\n  Dropdown,\n  Menu,\n  Header,\n  OverflowIcon,\n  useDesignSystemTheme,\n  type HeaderProps,\n} from '@databricks/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { PreviewBadge } from './PreviewBadge';\n\ntype OverflowMenuProps = {\n  menu?: {\n    id: string;\n    itemName: React.ReactNode;\n    onClick?: (...args: any[]) => any;\n    href?: string;\n  }[];\n};\n\nexport function OverflowMenu({ menu }: OverflowMenuProps) {\n  const overflowMenu = (\n    <Menu>\n      {/* @ts-expect-error TS(2532): Object is possibly 'undefined'. */}\n      {menu.map(({ id, itemName, onClick, href, ...otherProps }) => (\n        // @ts-expect-error TS(2769): No overload matches this call.\n        <Menu.Item key={id} onClick={onClick} href={href} data-testid={id} {...otherProps}>\n          {itemName}\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n  return menu.length > 0 ? (\n    <Dropdown overlay={overflowMenu} trigger={['click']} placement=\"bottomLeft\" arrow>\n      <Button\n        componentId=\"codegen_mlflow_app_src_shared_building_blocks_pageheader.tsx_54\"\n        icon={<OverflowIcon />}\n        data-testid=\"overflow-menu-trigger\"\n        aria-label=\"Open header dropdown menu\"\n      />\n    </Dropdown>\n  ) : null;\n}\n\ntype PageHeaderProps = Pick<HeaderProps, 'dangerouslyAppendEmotionCSS'> & {\n  title: React.ReactNode;\n  breadcrumbs?: React.ReactNode[];\n  preview?: boolean;\n  feedbackOrigin?: string;\n  infoPopover?: React.ReactNode;\n  children?: React.ReactNode;\n  spacerSize?: 'xs' | 'sm' | 'md' | 'lg';\n  hideSpacer?: boolean;\n  titleAddOns?: React.ReactNode | React.ReactNode[];\n};\n\n/**\n * A page header that includes:\n *   - title,\n *   - optional breadcrumb content,\n *   - optional preview mark,\n *   - optional feedback origin: shows the \"Send feedback\" button when not empty, and\n *   - optional info popover, safe to have link inside.\n */\nexport function PageHeader(props: PageHeaderProps) {\n  const {\n    title, // required\n    breadcrumbs = [],\n    titleAddOns = [],\n    preview,\n    children,\n    spacerSize,\n    hideSpacer = false,\n    dangerouslyAppendEmotionCSS,\n  } = props;\n  const { theme } = useDesignSystemTheme();\n  const intl = useIntl();\n\n  return (\n    <>\n      <Header\n        breadcrumbs={\n          breadcrumbs.length > 0 && (\n            <Breadcrumb includeTrailingCaret>\n              {breadcrumbs.map((b, i) => (\n                <Breadcrumb.Item key={i}>{b}</Breadcrumb.Item>\n              ))}\n            </Breadcrumb>\n          )\n        }\n        buttons={children}\n        title={title}\n        // prettier-ignore\n        titleAddOns={\n          <>\n            {preview && <PreviewBadge css={{ marginLeft: 0 }} />}\n            {titleAddOns}\n          </>\n        }\n        dangerouslyAppendEmotionCSS={dangerouslyAppendEmotionCSS}\n      />\n      <Spacer\n        // @ts-expect-error TS(2322): Type '{ css: { flexShrink: number; }; }' is not as... Remove this comment to see the full error message\n        css={{\n          // Ensure spacer's fixed height\n          flexShrink: 0,\n          ...(hideSpacer ? { display: 'none' } : {}),\n        }}\n        size={spacerSize}\n      />\n    </>\n  );\n}\n","import { identity, isFunction } from 'lodash';\nimport React from 'react';\n\n/**\n * A safe version of `useDeferredValue` that falls back to identity (A->A) if `useDeferredValue` is not supported\n * by current React version.\n */\nexport const useSafeDeferredValue: <T>(value: T) => T =\n  'useDeferredValue' in React && isFunction(React.useDeferredValue) ? React.useDeferredValue : identity;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useClipboard = void 0;\nvar clipboard_copy_1 = __importDefault(require(\"clipboard-copy\"));\nvar react_1 = require(\"react\");\nvar useTimedToggle_1 = require(\"./useTimedToggle\");\nfunction isInputLike(node) {\n    return node && (node.nodeName === 'TEXTAREA' || node.nodeName === 'INPUT');\n}\nfunction useClipboard(options) {\n    if (options === void 0) { options = {}; }\n    var _a = useTimedToggle_1.useTimedToggle(false), copied = _a[0], toggleCopied = _a[1];\n    var targetRef = react_1.useRef(null);\n    var optionsRef = react_1.useRef(options);\n    optionsRef.current = options;\n    function isSupported() {\n        return (!!navigator.clipboard ||\n            (typeof document.execCommand === 'function' &&\n                typeof document.queryCommandSupported === 'function' &&\n                document.queryCommandSupported('copy')));\n    }\n    var copyHandler = react_1.useCallback(function (text) {\n        var opts = optionsRef.current;\n        var target = targetRef.current;\n        function handleSuccess() {\n            if (opts.onSuccess) {\n                opts.onSuccess();\n            }\n            if (opts.copiedTimeout) {\n                toggleCopied(opts.copiedTimeout);\n            }\n            if (opts.selectOnCopy && isInputLike(target)) {\n                target.select();\n            }\n        }\n        function handleError() {\n            if (opts.onError) {\n                opts.onError();\n            }\n            if (opts.selectOnError !== false && isInputLike(target)) {\n                target.select();\n            }\n        }\n        function copy(value) {\n            clipboard_copy_1.default(value).then(handleSuccess).catch(handleError);\n        }\n        if (typeof text === 'string') {\n            copy(text);\n        }\n        else if (target) {\n            copy(target.value);\n        }\n    }, []);\n    return {\n        copied: copied,\n        copy: copyHandler,\n        isSupported: isSupported,\n        target: targetRef,\n    };\n}\nexports.useClipboard = useClipboard;\n"],"names":["fontFamily","fontSize","lineHeight","direction","textAlign","whiteSpace","wordSpacing","wordBreak","MozTabSize","OTabSize","tabSize","WebkitHyphens","MozHyphens","msHyphens","hyphens","background","color","padding","margin","overflow","textShadow","borderRadius","comment","prolog","doctype","cdata","punctuation","namespace","Opacity","tag","operator","number","property","function","selector","boolean","string","entity","cursor","url","keyword","control","directive","unit","statement","regex","atrule","placeholder","variable","deleted","textDecoration","inserted","borderBottom","italic","fontStyle","important","fontWeight","bold","Outline","OutlineOffset","borderRightColor","useRunsArtifacts","runUuids","artifactsKeyedByRun","setArtifactsKeyedByRun","useState","isLoading","setIsLoading","error","setError","useEffect","length","async","artifactsByRun","Promise","all","map","response","listArtifactsApi","runUuid","artifacts","payload","err","fetchArtifacts","_ref","name","styles","_ref2","CompareRunArtifactView","runInfos","colWidth","theme","useDesignSystemTheme","artifactPath","setArtifactPath","commonArtifacts","_artifactsKeyedByRun$","_artifactsKeyedByRun$2","_artifactsKeyedByRun$3","Object","keys","files","file","is_dir","path","filter","i","_artifactsKeyedByRun$4","_artifactsKeyedByRun$5","_commonArtifacts","currentRunArtifacts","includes","getCommonArtifacts","_jsx","children","FormattedMessage","id","defaultMessage","_jsxs","css","_css","backgroundColor","colors","backgroundPrimary","textPrimary","flex","border","grey300","overflowY","ArtifactViewTree","data","active","getBasename","onToggleTreebeard","borderLeft","display","flexDirection","index","style","width","spacing","md","ShowArtifactPage","artifactRootUri","artifactUri","experimentId","TabPane","LegacyTabs","_ref3","_ref4","CompareRunView","Component","constructor","props","super","compareRunViewRef","runDetailsTableRef","this","state","tableWidth","onlyShowParamDiff","onlyShowTagDiff","onlyShowMetricDiff","onResizeHandler","bind","onCompareRunTableScrollHandler","React","e","table","current","containerWidth","clientWidth","setState","blocks","querySelectorAll","forEach","_","block","target","scrollLeft","componentDidMount","pageTitle","intl","formatMessage","runs","Utils","updatePageTitle","window","addEventListener","dispatchEvent","Event","componentWillUnmount","removeEventListener","getTableColumnWidth","Math","round","renderExperimentNameRowItems","experiments","experimentNameMap","getExperimentNameMap","sortExperimentsById","basename","className","Link","to","Routes","getExperimentPageRoute","title","hasMultipleExperiments","experimentIds","shouldShowExperimentNameRow","hasComparedExperimentsBefore","getExperimentPageLink","experimentName","getCompareExperimentsPageLinkText","numExperiments","values","getCompareExperimentsPageLink","getCompareExperimentsPageRoute","getExperimentLink","comparedExperimentIds","getTitle","numRuns","renderParamTable","dataRows","renderDataRows","paramLists","key","value","jsonValue","parsePythonDictString","renderPrettyJson","onScroll","JSON","stringify","renderMetricTable","metricLists","getMetricPageRoute","info","uuid","idx","undefined","formatMetric","renderArtifactTable","renderTagTable","tagLists","renderTimeRows","colWidthStyle","unknown","timeAttributes","runInfo","startTime","endTime","formatTimestamp","duration","getDuration","scope","LegacyTooltip","placement","overlayStyle","maxWidth","dangerouslySetAntdProps","mouseEnterDelay","render","runNames","genWidthStyle","breadcrumbs","paramsLabel","metricsLabel","artifactsLabel","tagsLabel","diffOnlyLabel","ref","PageHeader","spacerSize","CollapsibleSection","r","_r$experimentId","_r$runUuid","getRunPageRoute","runName","Switch","componentId","label","join","checked","onChange","Spacer","size","minWidth","list","onlyShowDiff","highlightDiff","headerMap","formatter","CompareRunUtil","getKeys","k","Array","fill","records","hasDiff","some","x","rowClass","cellText","jsonString","replace","parse","connect","mapStateToProps","ownProps","compareExperiments","runDisplayNames","getExperiment","getRunInfo","push","getLatestMetrics","getParams","runTags","getRunTags","visibleTags","getVisibleTagValues","getRunDisplayName","getRunName","injectIntl","CompareRunPageImpl","requestIds","requestError","fetchExperiments","experimentRequestId","getUUID","dispatch","getExperimentApi","catch","requestId","getRunApi","_requestError$getMess","Error","getMessageField","call","PageContainer","RequestStateWrapper","suppressErrorThrow","decodeURI","uri","decodedURI","decodeURIComponent","CompareRunPage","withRouterNext","location","locationSearchDecoded","search","searchValues","qs","SyntaxError","message","withErrorBoundary","ErrorUtils","mlflowServices","RUN_TRACKING","CompareRunPageErrorFallback","Empty","description","image","DangerIcon","getAccordionStyles","getPrefixedClassName","clsPrefix","classItem","classHeader","classContentBox","paddingLeft","paddingTop","paddingBottom","alignItems","typography","lineHeightLg","xs","forceOpen","showServerError","defaultCollapsed","activeKeyProp","activeKey","defaultActiveKey","useIntl","getExpandIcon","useCallback","isActive","importantify","general","heightBase","transform","ChevronRightIcon","svg","height","Accordion","dangerouslyAppendEmotionCSS","expandIconPosition","expandIcon","Panel","header","SectionErrorBoundary","findInList","found","lists","numeric","item","isNaN","parseFloat","sort","PreviewBadge","Tag","marginLeft","useCopyController","text","copyTooltip","onCopy","copyMessage","copiedMessage","clipboard","useClipboard","copiedTimerIdRef","useRef","copied","setCopied","open","setOpen","clearTimeout","actionIcon","CheckIcon","CopyIcon","tooltipMessage","copy","setTimeout","ariaLabel","tooltipOpen","handleTooltipOpenChange","usesFullHeight","restProps","PageWrapper","useFullHeightLayout","wrapper","fixedSpacer","container","defaultProps","flexGrow","flexShrink","wordWrap","position","attribute","builtin","char","class","constant","hexcode","symbol","CopyButton","copyText","showLabel","buttonProps","showTooltip","setShowTooltip","visible","Button","type","onClick","handleClick","navigator","writeText","onMouseLeave","handleMouseLeave","OverflowMenu","menu","overflowMenu","Menu","itemName","href","otherProps","Item","Dropdown","overlay","trigger","arrow","icon","OverflowIcon","titleAddOns","preview","hideSpacer","_Fragment","Header","Breadcrumb","includeTrailingCaret","b","buttons","useSafeDeferredValue","isFunction","identity","__importDefault","mod","__esModule","defineProperty","exports","clipboard_copy_1","require","react_1","useTimedToggle_1","isInputLike","node","nodeName","options","_a","useTimedToggle","toggleCopied","targetRef","optionsRef","opts","handleSuccess","onSuccess","copiedTimeout","selectOnCopy","select","handleError","onError","selectOnError","default","then","isSupported","document","execCommand","queryCommandSupported"],"sourceRoot":""}